<?php
/* 
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 * @category app
 * @package views/vias
 * @author Lázaro Nieto Aranda
 * @date 16-abr-2015
 * @time 15:08:51
 */
 ?>
 <?php View::flash(); ?>

<script>
function orden(or, ord){
    $('li').removeClass('ui-selected');
    var $texto =ord+'_';
    $("#"+ord+" li").each(function(){
        $texto+= $(this).attr('id')+',';
    });
    $texto=$texto.slice(0, -1);
    $texto+='y';
    $texto +=or+'_';
    $("#"+or+" li").each(function(){
        $texto+= $(this).attr('id')+',';
    });
    $texto=$texto.slice(0, -1);
//    location.href='http://localhost/teryma/teryma/vias/vias/ordenar/'+$texto;
//    location.href=$.KumbiaPHP.publicPath+'/vias/vias/ordenar/'+$texto;
    $('#orden').val($texto);
   // $('form').submit();
   $('#blanco').submit();
}
</script>
<script>
$(function() {
        var or, ord;
        $('.cont').selectable({
                cancel: '.sort-handle'
        }).sortable({
                items: "> li",
                connectWith : 'ul',
                placeholder: "lm-placeholder", 
                revert: true,
                forcePlaceholderSize: 'true', 
                handle: '.sort-handle',
                helper: function(e, item) {
                        if ( ! item.hasClass('ui-selected') ) {
                                item.parent().children('.ui-selected').removeClass('ui-selected');
                                item.addClass('ui-selected');
                        }

                        var selected = item.parent().children('.ui-selected').clone();
                        item.data('multidrag', selected).siblings('.ui-selected').remove();
                        return $('<li/>').append(selected);
                },
                stop: function(e, ui) {

                        if (ui.sender){
                            or = ui.sender.attr('id');// id de la vía que sale
                        } else {
                            or = this.id;
                        }
                        ord = ui.item.parent().attr('id');//id de la vía que recibe
                        //$('ul').sortable('refresh');

                        var selected = ui.item.data('multidrag');
                        ui.item.after(selected);
                        ui.item.remove();
                        if (confirm('guardar movimiento?')) {
                                orden(or, ord);
                        }else{ location.reload();}

                        $('li').removeClass('ui-selected');
                }
        });
        
        $(".caja").contextmenu({
		delegate: ".hasmenu",
		autoFocus: true,
		preventContextMenuForPopup: true,
		preventSelect: true,
		taphold: true,
		menu: [
			{title: "Quitar Caja", cmd: "quitar"},
			{title: "Cambiar Caja", cmd: "cambiar"}
			],
		// Handle menu selection to implement a fake-clipboard
		select: function(event, ui) {
			var $target = ui.target;
			alert("select " + ui.cmd + " on " + $target.text());
                        
                        if (ui.cmd == "quitar" && $target.text()!== ' --- '){
                            $('#vacia').val($target.text());
                            $('#caja1').submit();
                            
                            //alert($target.attr("class"));
                            var $url = "<?php echo PUBLIC_PATH.'/img/vagones/vacio.png'; ?>";
                            if ($target.attr("class")=="primero hasmenu ui-selectee"){
                                $target.parent().next().children().first().css('background-image','url(' +$url+')');
                             }else{
                                $target.parent().next().children().eq(1).css('background-image','url(' +$url+')');
                             }
                             $target.text(' --- ');
                        }
			// Optionally return false, to prevent closing the menu now
		},
		// Implement the beforeOpen callback to dynamically change the entries
		beforeOpen: function(event, ui) {
			var $menu = ui.menu,
				$target = ui.target,
				extraData = ui.extraData; // passed when menu was opened by call to open()

			// console.log("beforeOpen", event, ui, event.originalEvent.type);

			ui.menu.zIndex( $(event.target).zIndex() + 1);

//			$(document)
////				.contextmenu("replaceMenu", [{title: "aaa"}, {title: "bbb"}])
////				.contextmenu("replaceMenu", "#options2")
////				.contextmenu("setEntry", "cut", {title: "Cuty", uiIcon: "ui-icon-heart", disabled: true})
//				.contextmenu("setEntry", "copy", "Copy '" + $target.text() + "'")
//				.contextmenu("setEntry", "paste", "Paste" + (CLIPBOARD ? " '" + CLIPBOARD + "'" : ""))
//				.contextmenu("enableEntry", "paste", (CLIPBOARD !== ""));

			// Optionally return false, to prevent opening the menu now
		}
	});
        $(".autos").contextmenu({
		delegate: ".hasmenu2",
		autoFocus: true,
		preventContextMenuForPopup: true,
		preventSelect: true,
		taphold: true,
		menu: [
			{title: "Entrada", cmd: "entrada"},
			{title: "Salida", cmd: "salida"},
                        {title: "Vacio", cmd: "vacio"}
			],
		// Handle menu selection to implement a fake-clipboard
		select: function(event, ui) {
			var $target = ui.target;
			alert("select " + ui.cmd + " on " + $target.text());
			// Optionally return false, to prevent closing the menu now
		},
		// Implement the beforeOpen callback to dynamically change the entries
		beforeOpen: function(event, ui) {
			var $menu = ui.menu,
				$target = ui.target,
				extraData = ui.extraData; // passed when menu was opened by call to open()

			// console.log("beforeOpen", event, ui, event.originalEvent.type);

			ui.menu.zIndex( $(event.target).zIndex() + 1);

//			$(document)
////				.contextmenu("replaceMenu", [{title: "aaa"}, {title: "bbb"}])
////				.contextmenu("replaceMenu", "#options2")
////				.contextmenu("setEntry", "cut", {title: "Cuty", uiIcon: "ui-icon-heart", disabled: true})
//				.contextmenu("setEntry", "copy", "Copy '" + $target.text() + "'")
//				.contextmenu("setEntry", "paste", "Paste" + (CLIPBOARD ? " '" + CLIPBOARD + "'" : ""))
//				.contextmenu("enableEntry", "paste", (CLIPBOARD !== ""));

			// Optionally return false, to prevent opening the menu now
		}
	});
});

</script>

<div class="blanco">

    <?php View::process($page_module, $page_title, $set_title); ?>
    <?php echo Ajax::form(null,null,'"id="blanco') ?>
    <?php echo Form::hidden('orden') ?>
    <?php echo Form::close() ?>
    <?php echo Ajax::form(null,null,'"id="caja1') ?>
    <?php echo Form::hidden('vacia') ?>
    <?php echo Form::close() ?>

    <?php if($vias) { ?>
	<?php foreach($vias as $row): ?>
            <?php if($row->id < 99){ ?>
                <div class="separador">Vía <?php echo $row->id; ?></div>
                <div class="vias" style="width:<?php echo $row->largo *3.333; ?>px; height:60px; padding-bottom:1px; border: 1px solid #7C7C7C; border-bottom: 3px solid black;" id="via<?php echo $row->id; ?>">
                    <ul id="v-<?php echo $row->id; ?>" class="cont" style="width:<?php echo $row->largo*3.333; ?>px; height:60px; list-style: none;">
                        <?php foreach($row->vagones as $vag): ?>
                            <li id="va-<?php echo $vag->id; ?>" style=" display:inline-block;height: 60px; ">
                                <span class="sort-handle">&#8225;</span>
                                <table style="width:<?php echo $vag->tipo->medida*3.333 ?>; margin-right:0px; display:inline-block;">
                                    <tr class="<?php if($vag->alto==1){echo 'caja';} else {echo 'autos';}?>">
                                        <td class="primero <?php if($vag->alto==1){echo 'hasmenu';} else {echo 'hasmenu2';}?>"><?php echo $vag->caja1 ?></td>
                                        <?php if($vag->caja2){ echo"<td class='hasmenu segundo'>$vag->caja2</td>";}?>
                                    </tr>
                                    <?php if($vag->imgC1){ echo '<tr>';
                                        echo '<td style="background: url('.PUBLIC_PATH.'/img/vagones/'.$vag->imgC1.')no-repeat; height: 14px; width: 50px;"></td>';
                                        //echo '<td>'.Html::img('vagones/'.$vag->imgC1, $alt=NULL,null).'</td>';
                                        if($vag->imgC2){echo '<td style="background: url('.PUBLIC_PATH.'/img/vagones/'.$vag->imgC2.')no-repeat; height: 14px; width: 50px;"></td>';}//echo '<td>'.Html::img('vagones/'.$vag->imgC2, $alt=null,null).'</td>';}
                                    echo '</tr>';} ?>
                                    
                                    <tr><td colspan="<?php echo $vag->ancho ?>" rowspan="<?php //echo $vag->alto ?>"<?php if($vag->alto==1){echo 'style="background: url('.PUBLIC_PATH.'/img/vagones/'.$vag->imgV.')no-repeat; height: 7px;"';} ?>><?php if($vag->alto==2){echo Html::img('vagones/'.$vag->imgV, $alt=NULL,null);} ?></td></tr>
                                    <tr><td colspan="<?php echo $vag->ancho ?>" style="width: <?php echo $vag->tipo->medida*3.333 ?>px;"><?php echo $vag->id_vagon ?></td></tr>
                                </table>
                            </li>
                        <?php endforeach; ?>
                    </ul>
                </div>
                <div class="row separador" style="width:100%; height:30px;"></div>
            <?php } ?>
        <?php endforeach; ?>
        <div class="row separador" style="width:100%; height:30px;"></div>
    <?php } ?>
  
</div>
 
